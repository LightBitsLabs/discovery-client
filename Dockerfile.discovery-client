# Copyright 2016--2022 Lightbits Labs Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# you may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

FROM golang:1.22-alpine3.19 AS builder

RUN apk update && \
    apk add --no-cache \
    curl \
    docker-cli \
    bash \
    make \
    git \
    g++ \
    musl-dev \
    util-linux-dev \
    linux-headers

ENV UNAME=app

ARG GID=1000
ARG UID=1000
ARG DOCKER_GID=998

RUN addgroup -g $GID $UNAME
# on alpine ping group is coliding with docker-group on id 999 - delete it if exists
RUN getent group ping && delgroup ping
RUN addgroup -g $DOCKER_GID docker
RUN adduser --disabled-password -u $UID -G $UNAME -G docker $UNAME

COPY . /go/src/github.com/lightbitslabs/discovery-client
WORKDIR /go/src/github.com/lightbitslabs/discovery-client
RUN make build/discovery-client


FROM alpine:3.19 AS discovery-client

LABEL maintainers="Lightbits Labs" \
      description="NVMeTCP Discovery Client Service" \
      version.rel="UNKNOWN" \
      version.git="UNKNOWN" \
      version.build.host="UNKNOWN" \
      version.build.time="UNKNOWN" \
      version.build.id="UNKNOWN"

RUN apk update && \
    apk add --no-cache \
    util-linux

RUN mkdir -p /etc/{discovery-client,nvme}
COPY --from=builder /go/src/github.com/lightbitslabs/discovery-client/etc/discovery-client/discovery-client.yaml /etc/discovery-client/

COPY --from=builder /go/src/github.com/lightbitslabs/discovery-client/build/discovery-client /discovery-client

ENTRYPOINT ["/discovery-client"]
CMD ["serve"]



ARG BASE_SHA "8.6"
FROM registry.access.redhat.com/ubi8/ubi-minimal:8.6 AS discovery-client-ubi
#FROM registry.access.redhat.com/ubi8/ubi-minimal:${BASE_SHA} AS discovery-client-ubi

# leave unset to use the default value at the top of the file
ARG BASE_SHA

ARG VERSION=""
ARG DATE=""
ARG REVISION=""

# OCI labels: https://github.com/opencontainers/image-spec/blob/main/annotations.md
LABEL org.opencontainers.image.base.digest="${BASE_SHA}" \
      org.opencontainers.image.created="${DATE}" \
      org.opencontainers.image.authors="dev@lightbitslabs.com" \
      org.opencontainers.image.url="docker.lightbitslabs.com/lightos-csi/lb-nvme-discovery-client" \
      org.opencontainers.image.documentation="https://github.com/lightbitslabs/discovery-client" \
      org.opencontainers.image.source="https://github.com/lightbitslabs/discovery-client" \
      org.opencontainers.image.version="${VERSION}" \
      org.opencontainers.image.revision="${REVISION}" \
      org.opencontainers.image.vendor="Lightbits Labs" \
      org.opencontainers.image.licenses="Apache License, Version 2.0" \
      org.opencontainers.image.title="Lightbits CSI Operator" \
      org.opencontainers.image.description="Discovery Client for NVMe-TCP"

# OpenShift labels: https://docs.openshift.com/container-platform/4.10/openshift_images/create-images.html#defining-image-metadata
LABEL io.openshift.tags="nvme-tcp,storage" \
      io.k8s.description="Discovery Client for NVMe-TCP" \
      io.openshift.non-scalable="false" \
      io.openshift.min-memory="1024Mi" \
      io.openshift.min-cpu="1"

LABEL name="discovery-client" \
      vendor="Lightbits Labs" \
      maintainer="dev@lightbitslabs.com" \
      version="${VERSION}" \
      summary="Discovery Client for NVMe-TCP" \
      description="Discovery Client for NVMe-TCP"

# copy the licenses folder
RUN mkdir -p /licenses
COPY LICENSE /licenses

RUN microdnf update -y && rm -rf /var/cache/yum
ADD deploy/almalinux.repo /etc/yum.repos.d/
RUN mkdir -p /etc/pki/rpm-gpg/
ADD deploy/RPM-GPG-KEY-AlmaLinux /etc/pki/rpm-gpg/

RUN microdnf install \
    util-linux

RUN mkdir -p /etc/{discovery-client,nvme}
COPY --from=builder /go/src/github.com/lightbitslabs/discovery-client/etc/discovery-client/discovery-client.yaml /etc/discovery-client/

COPY --from=builder /go/src/github.com/lightbitslabs/discovery-client/build/discovery-client /discovery-client

ENTRYPOINT ["/discovery-client"]
CMD ["serve"]
